name: test

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number for comment-triggered runs'
        required: false
        type: string

jobs:
  test:
    name: Test
    runs-on: macos-15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.pr_number && format('refs/pull/{0}/head', github.event.inputs.pr_number) || github.ref }}
        
    - name: Create status check
      if: ${{ github.event.inputs.pr_number }}
      uses: actions/github-script@v7
      with:
        script: |
          const pr = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: ${{ github.event.inputs.pr_number }}
          });
          
          await github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: pr.data.head.sha,
            state: 'pending',
            context: 'Test',
            description: 'Running tests...'
          });
      
    - name: Setup Xcode
      run: sudo xcode-select -s /Applications/Xcode_16.3.app
      
    - name: Cache Swift dependencies
      uses: actions/cache@v3
      with:
        path: |
          .build
          ~/Library/Caches/org.swift.swiftpm
        key: ${{ runner.os }}-spm-${{ hashFiles('Package.swift', 'Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Build
      run: swift build
      
    - name: Test
      run: swift test
      
    - name: Report success status
      if: ${{ success() && github.event.inputs.pr_number }}
      uses: actions/github-script@v7
      with:
        script: |
          const pr = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: ${{ github.event.inputs.pr_number }}
          });
          
          await github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: pr.data.head.sha,
            state: 'success',
            context: 'Test',
            description: 'All tests passed'
          });
          
    - name: Report failure status
      if: ${{ failure() && github.event.inputs.pr_number }}
      uses: actions/github-script@v7
      with:
        script: |
          const pr = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: ${{ github.event.inputs.pr_number }}
          });
          
          await github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: pr.data.head.sha,
            state: 'failure',
            context: 'Test',
            description: 'Tests failed'
          });